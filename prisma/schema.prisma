generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url = env("DATABASE_URL")
}

model User {
  id       String     @id @unique @default(uuid())
  name     String
  email    String     @unique
  password String
  avatar   String
  Schedule Schedule[]
}

model Session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], name: "IDX_session_expire")
  @@map("session")
}

model Schedule {
  id             String   @id @unique @default(uuid())
  name           String
  testDay        DateTime
  studyStartDate DateTime
  studyEndDate   DateTime
  days           Day[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  User           User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String?  @unique
}

model Day {
  id         String   @id @default(uuid())
  schedule   Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  scheduleId String
  date       DateTime @db.Timestamp(0)
  topics     Topic[]
  startTime  String
  endTime    String

  @@unique([scheduleId, date])
  @@index([scheduleId])
}

model Topic {
  id       String  @id @default(uuid())
  day      Day     @relation(fields: [dayId], references: [id], onDelete: Cascade)
  dayId    String
  name     String
  weight   Int
  duration Int // minutos
  status   Boolean @default(false)

  @@index([dayId])
}
